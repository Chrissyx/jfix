package com.chrissyx.jfix.gui.impl;

import com.chrissyx.jfix.common.error.JFixError;
import com.chrissyx.jfix.gui.OptionsView;
import com.chrissyx.jfix.modules.ConfigController;
import com.chrissyx.jfix.modules.GuiController;
import com.chrissyx.jfix.modules.LangController;
import com.chrissyx.jfix.modules.util.CryptUtils;
import com.chrissyx.jfix.modules.util.FileUtils;

import javax.swing.JFileChooser;

import org.slf4j.LoggerFactory;

/**
 * The options dialog.
 *
 * @author Chrissyx
 */
public class OptionsDialog extends javax.swing.JDialog implements OptionsView
{
    /**
     * Creates new options dialog.
     *
     * @param parent Parent frame of this dialog
     * @param modal Modal dialog mode
     */
    public OptionsDialog(final java.awt.Frame parent, final boolean modal)
    {
        super(parent, modal);
        this.initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFTP = new javax.swing.JPanel();
        lblHost = new javax.swing.JLabel();
        lblPort = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        txtHost = new javax.swing.JTextField();
        fmtTxtPort = new javax.swing.JFormattedTextField();
        txtUser = new javax.swing.JTextField();
        pwdPass = new javax.swing.JPasswordField();
        pnlGeneral = new javax.swing.JPanel();
        lblLocalStartDir = new javax.swing.JLabel();
        txtLocalStartDir = new javax.swing.JTextField();
        lblRemoteStartDir = new javax.swing.JLabel();
        txtRemoteStartDir = new javax.swing.JTextField();
        btnSelectLocalDir = new javax.swing.JButton();
        chkRecursive = new javax.swing.JCheckBox();
        lblPlugIn = new javax.swing.JLabel();
        cbxPlugIns = new javax.swing.JComboBox();
        lblLanguage = new javax.swing.JLabel();
        cbxLanguage = new javax.swing.JComboBox();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(LangController.getInstance().getString("options"));
        setName("optionsDialog"); // NOI18N
        setResizable(false);

        pnlFTP.setBorder(javax.swing.BorderFactory.createTitledBorder(LangController.getInstance().getString("ftp_connection")));

        lblHost.setText(LangController.getInstance().getString("host"));

        lblPort.setText(LangController.getInstance().getString("port_number"));

        lblUser.setText(LangController.getInstance().getString("user_name"));

        lblPass.setText(LangController.getInstance().getString("password"));

        txtHost.setText(ConfigController.getInstance().getCfgVal("host"));

        fmtTxtPort.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        fmtTxtPort.setText(ConfigController.getInstance().getCfgVal("port"));

        txtUser.setText(ConfigController.getInstance().getCfgVal("user"));

        pwdPass.setText(CryptUtils.decode(ConfigController.getInstance().getCfgVal("pass")));

        javax.swing.GroupLayout pnlFTPLayout = new javax.swing.GroupLayout(pnlFTP);
        pnlFTP.setLayout(pnlFTPLayout);
        pnlFTPLayout.setHorizontalGroup(
            pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFTPLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHost)
                    .addComponent(lblPort)
                    .addComponent(lblUser)
                    .addComponent(lblPass))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pwdPass, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(txtUser, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(txtHost, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(fmtTxtPort, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlFTPLayout.setVerticalGroup(
            pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFTPLayout.createSequentialGroup()
                .addGroup(pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHost)
                    .addComponent(txtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPort)
                    .addComponent(fmtTxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUser)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPass)
                    .addComponent(pwdPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlGeneral.setBorder(javax.swing.BorderFactory.createTitledBorder(LangController.getInstance().getString("general")));

        lblLocalStartDir.setText(LangController.getInstance().getString("local_start_directory"));

        txtLocalStartDir.setEditable(false);
        txtLocalStartDir.setText(ConfigController.getInstance().getCfgVal("localStartDir"));

        lblRemoteStartDir.setText(LangController.getInstance().getString("remote_start_directory"));

        txtRemoteStartDir.setText(ConfigController.getInstance().getCfgVal("remoteStartDir"));

        btnSelectLocalDir.setText(LangController.getInstance().getString("dots"));
        btnSelectLocalDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectLocalDirActionPerformed(evt);
            }
        });

        chkRecursive.setSelected(Boolean.parseBoolean(ConfigController.getInstance().getCfgVal("recursive")));
        chkRecursive.setText(LangController.getInstance().getString("fix_filetimes_recursively"));

        lblPlugIn.setText(LangController.getInstance().getString("plug_in_to_use"));

        cbxPlugIns.setModel(new javax.swing.DefaultComboBoxModel(FileUtils.getPackageListing("plugins", ".class", "FiletimeFixer", "package-info")));
        cbxPlugIns.setSelectedItem(ConfigController.getInstance().getCfgVal("plugIn"));

        lblLanguage.setText(LangController.getInstance().getString("language_after_restart"));

        cbxLanguage.setModel(new javax.swing.DefaultComboBoxModel(LangController.getInstance().getLocales()));
        cbxLanguage.setSelectedItem(ConfigController.getInstance().getCfgVal("language"));

        javax.swing.GroupLayout pnlGeneralLayout = new javax.swing.GroupLayout(pnlGeneral);
        pnlGeneral.setLayout(pnlGeneralLayout);
        pnlGeneralLayout.setHorizontalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkRecursive, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                    .addGroup(pnlGeneralLayout.createSequentialGroup()
                        .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRemoteStartDir)
                            .addComponent(lblLocalStartDir)
                            .addComponent(lblPlugIn)
                            .addComponent(lblLanguage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtRemoteStartDir, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlGeneralLayout.createSequentialGroup()
                                .addComponent(txtLocalStartDir, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSelectLocalDir, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cbxPlugIns, 0, 272, Short.MAX_VALUE)
                            .addComponent(cbxLanguage, 0, 272, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlGeneralLayout.setVerticalGroup(
            pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGeneralLayout.createSequentialGroup()
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxLanguage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLanguage))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocalStartDir)
                    .addComponent(txtLocalStartDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectLocalDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRemoteStartDir)
                    .addComponent(txtRemoteStartDir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxPlugIns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlugIn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkRecursive))
        );

        btnOK.setText(LangController.getInstance().getString("save"));
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(btnOK))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlFTP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlFTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
    GuiController.getInstance().onSaveOptions();
}//GEN-LAST:event_btnOKActionPerformed

private void btnSelectLocalDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectLocalDirActionPerformed
    LoggerFactory.getLogger(OptionsDialog.class).debug("Creating file chooser dialog for directory...");
    final JFileChooser fileChooser = new JFileChooser(this.txtLocalStartDir.getText());
    fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    switch(fileChooser.showOpenDialog(this))
    {
        case JFileChooser.APPROVE_OPTION:
            this.txtLocalStartDir.setText(fileChooser.getSelectedFile().getPath());
            break;

        case JFileChooser.CANCEL_OPTION:
            LoggerFactory.getLogger(OptionsDialog.class).debug("User cancelled directory choose dialog");
            break;

        case JFileChooser.ERROR_OPTION:
            new JFixError("Showing open dialog for choosing directory failed!").error(OptionsDialog.class);
            break;

        default:
            LoggerFactory.getLogger(OptionsDialog.class).warn("Unknown return value from open dialog for choosing directory!");
            break;
    }
}//GEN-LAST:event_btnSelectLocalDirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnSelectLocalDir;
    private javax.swing.JComboBox cbxLanguage;
    private javax.swing.JComboBox cbxPlugIns;
    private javax.swing.JCheckBox chkRecursive;
    private javax.swing.JFormattedTextField fmtTxtPort;
    private javax.swing.JLabel lblHost;
    private javax.swing.JLabel lblLanguage;
    private javax.swing.JLabel lblLocalStartDir;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPlugIn;
    private javax.swing.JLabel lblPort;
    private javax.swing.JLabel lblRemoteStartDir;
    private javax.swing.JLabel lblUser;
    private javax.swing.JPanel pnlFTP;
    private javax.swing.JPanel pnlGeneral;
    private javax.swing.JPasswordField pwdPass;
    private javax.swing.JTextField txtHost;
    private javax.swing.JTextField txtLocalStartDir;
    private javax.swing.JTextField txtRemoteStartDir;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

    /**
     * {@inheritDoc}
     */
    @Override
    public void closeFrame()
    {
        this.dispose();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void showFrame()
    {
        this.setVisible(true);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionHost()
    {
        return this.txtHost.getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionPort()
    {
        return this.fmtTxtPort.getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionUser()
    {
        return this.txtUser.getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionPass()
    {
        return new String(this.pwdPass.getPassword());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionLanguage()
    {
        return (String) this.cbxLanguage.getSelectedItem();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionLocalStartDir()
    {
        return this.txtLocalStartDir.getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionRemoteStartDir()
    {
        return this.txtRemoteStartDir.getText();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getOptionPlugIn()
    {
        return (String) this.cbxPlugIns.getSelectedItem();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public boolean getOptionRecursive()
    {
        return this.chkRecursive.isSelected();
    }
}
